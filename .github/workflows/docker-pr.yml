name: Docker CI - PR

concurrency:
 group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
 cancel-in-progress: true

on:
 pull_request:
   branches:
     - 'main'

jobs:
 pytest:
   runs-on: ubuntu-latest
   steps:
     - name: Checkout
       uses: actions/checkout@v3
     - name: Set up Python
       uses: actions/setup-python@v2
       with:
         python-version: '3.x'
     - name: Install dependencies
       run: |
         python -m pip install --upgrade pip
         pip install -r spaCy/requirements.txt
         pip install --no-cache-dir pytest
         pip install -U pip setuptools wheel
         pip install -U spacy
         python -m spacy download da_core_news_md
     - name: Run PyTest
       uses: pavelzw/pytest-action@v2.2.0
       with:
         verbose: false
         emoji: false
         job-summary: false
         custom-arguments: '-q spaCy'
         click-to-expand: false
         report-title: 'Test Report'

 docker:
   needs: pytest
   runs-on: ubuntu-latest
   steps:
     - name: Checkout
       uses: actions/checkout@v3
     - name: Set up QEMU
       uses: docker/setup-qemu-action@v3
     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v3
     - name: Login to Docker Hub
       uses: docker/login-action@v3
       with:
         username: ${{ secrets.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_TOKEN }}
     - name: Extract branch name
       shell: bash
       run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
       id: extract_branch
     - name: Push Knowledge Retriever image
       uses: docker/build-push-action@v5
       with:
         context: KnowledgeRetriever/
         push: true
         tags: eshes/knox-group-g:${{ steps.extract_branch.outputs.branch }}
         platforms: linux/arm64
     - name: Push spaCy image
       uses: docker/build-push-action@v5
       with:
         context: spaCy/
         file: Dockerfile.spacy
         push: true
         tags: eshes/knox-group-g:${{ steps.extract_branch.outputs.branch }}
         platforms: linux/arm64
     - name: Discord notification
       env:
         DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
       uses: Ilshidur/action-discord@master
       with:
         args: 'The project **${{ steps.extract_branch.outputs.branch }}** has been deployed to Docker.'
